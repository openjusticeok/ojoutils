% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comma.R
\name{comma}
\alias{comma}
\title{Convert a numeric value to a formatted string with commas}
\usage{
comma(
  x,
  digits = 0,
  abs = FALSE,
  round_to_zero = FALSE,
  drop_trailing_zeros = FALSE,
  ...
)
}
\arguments{
\item{x}{A numeric value to be converted to a formatted string with commas}

\item{digits}{Number of decimal places to round to, Default:}

\item{abs}{Take the absolute value of x before converting to a formatted string with commas, Default: FALSE}

\item{round_to_zero}{Ensures no number every rounds to zero. For example, 0.4 will always be displayed as 0.4 and not be rounded to zero, but 1.4 will still round to 1. Default: FALSE}

\item{drop_trailing_zeros}{Drop trailing zeros after the decimal point, Default: FALSE}
}
\value{
A formatted string with commas
}
\description{
User inputs a numeric value and function converts it to a formatted string with commas.
}
\details{
The function uses the \code{round_half_up} function from the janitor package to round the number to the specified number of decimal places. The \code{formatC} function is then used to format the number as a string with commas and the specified number of decimal places and trailing zeros.
}
\examples{
x <- 1234567.89
x
comma(x)
comma(x, digits = 3)
comma(x, digits = 3, drop_trailing_zeros = TRUE)
y <- 0.4
comma(y)
comma(y, round_to_zero = TRUE)
}
\seealso{
\code{\link[janitor]{round_half_up}}
\code{\link[base]{formatC}}
}
\author{
Anthony Flores
}
